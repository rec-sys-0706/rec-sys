info:
  title: APIFlask
  version: 0.1.0
tags:
- name: Item
- name: App_User
- name: Behavoir
- name: Auth
paths:
  /api/item:
    get:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      tags:
      - Item
      summary: Read Data
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
      tags:
      - Item
      summary: Create Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemIn'
  /api/user:
    get:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      tags:
      - App_User
      summary: Read Data
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
      tags:
      - App_User
      summary: Create Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIn'
  /api/behavoir:
    get:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      tags:
      - Behavoir
      summary: Read Data
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
      tags:
      - Behavoir
      summary: Create Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorIn'
  /api/auth/login:
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      tags:
      - Auth
      summary: Login
  /api/auth/register:
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
      tags:
      - Auth
      summary: Register
  /api/item/{uuid}:
    get:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id001 {}
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Item
      summary: Read Data By Uuid
    put:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Item
      summary: Update Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInUpdate'
    delete:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: *id001
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Item
      summary: Delete Data
  /api/user/{uuid}:
    get:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id002 {}
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - App_User
      summary: Read Data By Uuid
    put:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - App_User
      summary: Update Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInUpdate'
    delete:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: *id002
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - App_User
      summary: Delete Data
  /api/behavoir/{uuid}:
    get:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: &id003 {}
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Behavoir
      summary: Read Data By Uuid
    put:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Behavoir
      summary: Update Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorInUpdate'
    delete:
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: *id003
          description: Successful response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      tags:
      - Behavoir
      summary: Delete Data
openapi: 3.0.3
components:
  schemas:
    ValidationError:
      properties:
        detail:
          type: object
          properties:
            <location>:
              type: object
              properties:
                <field_name>:
                  type: array
                  items:
                    type: string
        message:
          type: string
      type: object
    HTTPError:
      properties:
        detail:
          type: object
        message:
          type: string
      type: object
    ItemIn:
      type: object
      properties:
        title:
          type: string
          minLength: 500
        abstract:
          type: string
        link:
          type: string
          minLength: 255
        data_source:
          type: string
          enum:
          - mind_small
          - hf_paper
          - cnn_news
        gattered_datetime:
          type: string
          format: date-time
      required:
      - abstract
      - data_source
      - title
    UserIn:
      type: object
      properties:
        account:
          type: string
          minLength: 0
          maxLength: 64
        password:
          type: string
          minLength: 0
          maxLength: 128
        email:
          type: string
          minLength: 0
          maxLength: 128
        line_id:
          type: string
          minLength: 0
          maxLength: 64
      required:
      - account
      - email
      - password
    BehaviorIn:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        item_id:
          type: string
          format: uuid
        clicked_time:
          type: string
          format: date-time
      required:
      - clicked_time
      - item_id
      - user_id
    ItemInUpdate:
      type: object
      properties:
        title:
          type: string
          minLength: 500
        abstract:
          type: string
        link:
          type: string
          minLength: 255
        data_source:
          type: string
          enum:
          - mind_small
          - hf_paper
          - cnn_news
        gattered_datetime:
          type: string
          format: date-time
    UserInUpdate:
      type: object
      properties:
        account:
          type: string
          minLength: 0
          maxLength: 64
        password:
          type: string
          minLength: 0
          maxLength: 128
        email:
          type: string
          minLength: 0
          maxLength: 128
        line_id:
          type: string
          minLength: 0
          maxLength: 64
    BehaviorInUpdate:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        item_id:
          type: string
          format: uuid
        clicked_time:
          type: string
          format: date-time

